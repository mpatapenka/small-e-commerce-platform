#!/bin/bash
#
# Startup script for inlove-app
#
# description: inlove-shop.by website

# Source function library.
. /etc/rc.d/init.d/functions
[ -z "$JAVA_HOME" -a -x /etc/profile.d/java.sh ] && . /etc/profile.d/java.sh

INLOVE_HOME=/inlove
JAR="$INLOVE_HOME/inlove-app.jar"
LOG="$INLOVE_HOME/logs/inlove.log"
LOCK="/var/lock/subsys/inlove-app"
export INLOVE_HOME

RETVAL=0

pid_of_inlove() {
    pgrep -f "java.*inlove-app"
}

start() {
	[ -e "$LOG" ] && cnt=`wc -l "$LOG" | awk '{ print $1 }'` || cnt=1

    echo -n $"Starting inlove-app: "

    cd "$INLOVE_HOME"
    nohup java -Dspring.profiles.active=prod -jar "$JAR" >> "$LOG" 2>&1 &

    while { pid_of_inlove > /dev/null ; } &&
        ! { tail +$cnt "$LOG" | grep -q 'Started Application in .* seconds' ; } ; do
        sleep 1
    done

    pid_of_inlove > /dev/null
    RETVAL=$?
    [ $RETVAL = 0 ] && success $"$STRING" || failure $"$STRING"
    echo

    [ $RETVAL = 0 ] && touch "$LOCK"
}

stop() {
    echo -n "Stopping inlove-app: "

    pid=`pid_of_inlove`
    [ -n "$pid" ] && kill $pid
    RETVAL=$?
    cnt=10
    while [ $RETVAL = 0 -a $cnt -gt 0 ] &&
        { pid_of_inlove > /dev/null ; } ; do
            sleep 1
            ((cnt--))
    done

    [ $RETVAL = 0 ] && rm -f "$LOCK"
    [ $RETVAL = 0 ] && success $"$STRING" || failure $"$STRING"
    echo
}

status() {
    pid=`pid_of_inlove`
    if [ -n "$pid" ]; then
        echo "inlove-app (pid $pid) is running..."
        return 0
    fi
    if [ -f "$LOCK" ]; then
        echo $"${base} dead but subsys locked"
        return 2
    fi
    echo "inlove-app is stopped"
    return 3
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit $RETVAL